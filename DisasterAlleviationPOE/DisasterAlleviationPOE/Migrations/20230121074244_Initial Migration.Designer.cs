// <auto-generated />
using System;
using DisasterAlleviationPOE.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DisasterAlleviationPOE.Migrations
{
    [DbContext(typeof(DisasterAlleviationContext))]
    [Migration("20230121074244_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DisasterAlleviationPOE.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.Disasters", b =>
                {
                    b.Property<int>("DisasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredAidTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DisasterID");

                    b.HasIndex("RequiredAidTypeID");

                    b.ToTable("Disasters");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.GoodsDonations", b =>
                {
                    b.Property<int>("GoodsDonationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisasterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DonationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfItems")
                        .HasColumnType("int");

                    b.HasKey("GoodsDonationID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("DisasterID");

                    b.ToTable("GoodsDonations");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.MonetaryDonations", b =>
                {
                    b.Property<int>("MonetaryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DonationAmount")
                        .HasColumnType("Money");

                    b.Property<DateTime>("DonationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonetaryID");

                    b.ToTable("MonetaryDonation");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.PurchaseGoods", b =>
                {
                    b.Property<int>("GoodsPurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisasterID")
                        .HasColumnType("int");

                    b.Property<int?>("DisastersDisasterID")
                        .HasColumnType("int");

                    b.Property<int?>("MonetaryDonationsMonetaryID")
                        .HasColumnType("int");

                    b.Property<int>("MonetaryID")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchaseAmount")
                        .HasColumnType("Money");

                    b.HasKey("GoodsPurchaseID");

                    b.HasIndex("DisastersDisasterID");

                    b.HasIndex("MonetaryDonationsMonetaryID");

                    b.ToTable("PurchaseGoods");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.RequiredAidType", b =>
                {
                    b.Property<int>("RequiredAidTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequiredAidName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequiredAidTypeID");

                    b.ToTable("RequiredAidTypes");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.Disasters", b =>
                {
                    b.HasOne("DisasterAlleviationPOE.Models.RequiredAidType", "RequiredAidType")
                        .WithMany("Disasters")
                        .HasForeignKey("RequiredAidTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequiredAidType");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.GoodsDonations", b =>
                {
                    b.HasOne("DisasterAlleviationPOE.Models.Category", "Category")
                        .WithMany("Goods")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisasterAlleviationPOE.Models.Disasters", "Disaster")
                        .WithMany("Goods")
                        .HasForeignKey("DisasterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Disaster");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.PurchaseGoods", b =>
                {
                    b.HasOne("DisasterAlleviationPOE.Models.Disasters", "Disasters")
                        .WithMany()
                        .HasForeignKey("DisastersDisasterID");

                    b.HasOne("DisasterAlleviationPOE.Models.MonetaryDonations", "MonetaryDonations")
                        .WithMany()
                        .HasForeignKey("MonetaryDonationsMonetaryID");

                    b.Navigation("Disasters");

                    b.Navigation("MonetaryDonations");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.Category", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.Disasters", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("DisasterAlleviationPOE.Models.RequiredAidType", b =>
                {
                    b.Navigation("Disasters");
                });
#pragma warning restore 612, 618
        }
    }
}
